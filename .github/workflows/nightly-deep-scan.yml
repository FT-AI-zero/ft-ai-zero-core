# .github/workflows/nightly-deep-scan.yml
name: Nightly Deep Scan

on:
  schedule:
    # 每天 01:30 Asia/Shanghai == 17:30 UTC
    - cron: '30 17 * * *'
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  actions: read

concurrency:
  group: nightly-deep-scan
  cancel-in-progress: false

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install ruff bandit detect-secrets pip-audit radon

      - name: Ruff (lint)
        continue-on-error: true
        run: ruff check --output-format=github .

      - name: Bandit (security)
        continue-on-error: true
        run: bandit -r -q -ll -ii .

      - name: Detect secrets
        continue-on-error: true
        run: detect-secrets scan --all-files > .secrets.json || true

      - name: Pip audit
        continue-on-error: true
        run: pip-audit -r requirements.txt || true

      - name: Radon (complexity)
        continue-on-error: true
        run: radon cc -s -a core utils collectors scripts | tee radon.txt

      - name: Gather TODO/FIXME
        run: |
          grep -RIn -E 'TODO|FIXME|HACK' --exclude-dir=.git --exclude-dir=.github . \
          | head -n 50 > nightly_todo.txt || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nightly-report
          path: |
            .secrets.json
            nightly_todo.txt
            radon.txt

      - name: Comment summary to issue #1
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const issue_number = 1;
            const fs = require('fs');
            const read = p => { try { return fs.readFileSync(p,'utf8'); } catch { return ''; } };
            let secretsCount = 0;
            try {
              const j = JSON.parse(read('.secrets.json') || '{}');
              secretsCount = Object.keys(j.results || {}).length;
            } catch {}
            const todo  = read('nightly_todo.txt') || '(none)';
            const radon = (read('radon.txt').split('\n').slice(-1)[0] || '').trim();
            const body = [
              '### 🌙 Nightly Deep Scan',
              `- Secrets: **${secretsCount}**`,
              `- Complexity: ${radon}`,
              '**TODO/FIXME (<=50)**',
              '```',
              todo,
              '```',
              '_完整报告见 Artifacts: nightly-report_'
            ].join('\n');
            await github.rest.issues.createComment({owner, repo, issue_number, body});
