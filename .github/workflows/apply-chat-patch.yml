name: Apply Patch From Comment

on:
  issue_comment:
    types: [created]

# 需要有写权限+开 PR 权限
permissions:
  contents: write
  pull-requests: write

jobs:
  apply:
    # 只有包含 ```patch 的评论才触发
    if: contains(github.event.comment.body, '```patch')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract patch from comment
        run: |
          python - <<'PY'
          import os,re,json
          ev=json.load(open(os.environ['GITHUB_EVENT_PATH'],'r',encoding='utf-8'))
          m=re.search(r"```patch\s*(.*?)```", ev["comment"]["body"], re.S|re.I)
          assert m, "No ```patch``` block found in the comment"
          open("chat.patch","w",encoding="utf-8").write(m.group(1))
          PY

      - name: Create branch, apply and push
        run: |
          set -e
          BR="chatpatch-$(date +%s)"
          echo "BRANCH=$BR" >> $GITHUB_ENV

          git config user.name  "chat-bot"
          git config user.email "chat-bot@users.noreply.github.com"

          git checkout -b "$BR"
          git apply chat.patch
          git add -A
          git commit -m "Patch from chat"
          git push origin "$BR"

      - name: Open PR via API
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo
            // 自动取仓库默认分支作为 base
            const repoInfo = await github.repos.get({ owner, repo })
            const base = repoInfo.data.default_branch
            const head = process.env.BRANCH
            if (!head) core.setFailed('BRANCH env missing')

            const { data: pr } = await github.pulls.create({
              owner, repo, head, base,
              title: "Patch from chat",
              body: "Auto-created from issue comment.",
              maintainer_can_modify: true,
            })
            core.info(`PR -> ${pr.html_url}`)
